<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Libco on 大ばくち</title>
    <link>https://neptuneg.github.io/tags/libco/</link>
    <description>Recent content in Libco on 大ばくち</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Fri, 11 Aug 2017 10:46:23 +0800</lastBuildDate>
    
	<atom:link href="https://neptuneg.github.io/tags/libco/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>libco源码学习</title>
      <link>https://neptuneg.github.io/post/libco-memo-1/</link>
      <pubDate>Fri, 11 Aug 2017 10:46:23 +0800</pubDate>
      
      <guid>https://neptuneg.github.io/post/libco-memo-1/</guid>
      <description>其实C++11已经提供了lambda表达式，索性就梳理一下 co_closure.h 里一些宏定义的用法。 求宏可变参数个数： #define comac_get_args_cnt( ... ) comac_arg_n( __VA_ARGS__ ) #define comac_arg_n( _0,_1,_2,_3,_4,_5,_6,_7,N,...) N #define comac_args_seqs() 7,6,5,4,3,2,1,0 #define comac_argc( ... ) comac_get_args_cnt( 0,##__VA_ARGS__,comac_args_seqs() )</description>
    </item>
    
  </channel>
</rss>