<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 大ばくち</title>
    <link>https://neptuneg.github.io/post/</link>
    <description>Recent content in Posts on 大ばくち</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 17 Mar 2019 16:17:25 +0900</lastBuildDate>
    
	<atom:link href="https://neptuneg.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>business plan</title>
      <link>https://neptuneg.github.io/post/buss-plan/</link>
      <pubDate>Sun, 17 Mar 2019 16:17:25 +0900</pubDate>
      
      <guid>https://neptuneg.github.io/post/buss-plan/</guid>
      <description>新規事業計画 概要 Live活动为中心的门户网站 丰富我社技术造福娱乐的实践 企划契机 日本著名的live氛围和繁荣市场 想去看看live却不知道有哪些</description>
    </item>
    
    <item>
      <title>libco源码学习(一）</title>
      <link>https://neptuneg.github.io/post/libco-memo-1/</link>
      <pubDate>Fri, 11 Aug 2017 10:46:23 +0800</pubDate>
      
      <guid>https://neptuneg.github.io/post/libco-memo-1/</guid>
      <description>其实C++11已经提供了lambda表达式，索性就梳理一下 co_closure.h 里一些宏定义的用法。 求宏可变参数个数： #define comac_get_args_cnt( ... ) comac_arg_n( __VA_ARGS__ ) #define comac_arg_n( _0,_1,_2,_3,_4,_5,_6,_7,N,...) N #define comac_args_seqs() 7,6,5,4,3,2,1,0 #define comac_argc( ... ) comac_get_args_cnt( 0,##__VA_ARGS__,comac_args_seqs() )</description>
    </item>
    
    <item>
      <title>Kafka Producer和Consumer的go语言实现</title>
      <link>https://neptuneg.github.io/post/kafka-producer-consumer-in-golang/</link>
      <pubDate>Sun, 16 Jul 2017 18:23:16 +0800</pubDate>
      
      <guid>https://neptuneg.github.io/post/kafka-producer-consumer-in-golang/</guid>
      <description>Producer和Consumer可以直接使用logstash和fluentd针对Kafka的input/output插件，也可以基于各语言</description>
    </item>
    
    <item>
      <title>Kafka一瞥</title>
      <link>https://neptuneg.github.io/post/about-apache-kafka/</link>
      <pubDate>Tue, 11 Jul 2017 23:20:25 +0800</pubDate>
      
      <guid>https://neptuneg.github.io/post/about-apache-kafka/</guid>
      <description>Kafka的原理 Kafka由 Broker ， Producer 和 Consumer 三部分组成。Producer负责发布消息，Consumer读取消息。而作为Kafka的核心，Broke</description>
    </item>
    
    <item>
      <title>使用hugo搭建GitHub page</title>
      <link>https://neptuneg.github.io/post/hugo-github-page/</link>
      <pubDate>Tue, 04 Jul 2017 16:17:25 +0800</pubDate>
      
      <guid>https://neptuneg.github.io/post/hugo-github-page/</guid>
      <description>使用Hugo生成静态网站 安装Hugo到本地 在Hugo官方的release页面，根据本地情况下载对应安装包。 Windows上的安装 将下载的压缩</description>
    </item>
    
  </channel>
</rss>